schema {
  query: Query
}

type Branch {
  id: ID
  description: String
}

type InsuranceOption {
  a: String
}

type PaymentOption {
  a: String
}

type Query {
  vehicle(id: String = "stranger"): Vehicle
}

type Vehicle {
  branch: Branch
  description: String
  id: ID
  gearbox: String
  paymentOptions: [PaymentOption]
  insuranceOptions: [InsuranceOption]
  fuelType: String
  manufactureYear: Int
  manufacturer: String
  options: [String]
  properties: VehicleProperties
  modelName: String

  mileage: Int
}

type VehicleProperties {
  abs: Boolean
  acceleration: Float
  airbagDriver: Boolean
  airbagFrontSide: Boolean
  airbagPassenger: Boolean
  annualTax: Float
  annualBonus: Float
  annualMalus: Float
  brakeAssistance: Boolean
  chassis: String
  co2: Float
  colorName: String
  drivingWheel: String
  engineCylinders: Int
  engineVolume: Float
  environmentClass: String
  espSystem: Boolean
  fuelConsumptionCityDriving: Float
  fuelConsumptionCountryRoadDriving: Float
  fuelConsumptionMixedDriving: Float
  gearboxName: String
  groundClearence: Float
  hasAutomaticGearbox: Boolean
  height: Float
  isofixRearSeat: Boolean
  length: Float
  listPrice: Float
  maxLoadWeight: Float
  maxRoofWeight: Float
  maxSpeed: Float
  ncapMonth: String
  ncapStar: Int
  ncapYear: String
  numberOfGears: Int
  seats: Float
  secondaryFuelType: String
  segment: String
  serviceWeight: Int
  tankVolume: Float
  tco3Years2500: Float
  tiresFront: String
  tiresRear: String
  torque: Float
  trailerTotalWeightB: Float
  trailerTotalWeightBPlus: Float
  trailerWeight: Float
  trcSystem: Boolean
  trunkSpace: Float
  wheelBase: Float
  width: Float
}